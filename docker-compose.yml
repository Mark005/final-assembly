version: '3.7'

services:

  gateway:
    build: ./gateway/
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
    environment:
      SERVICE_PORT: 8080
      AUTH_SERVICE_URL: http://auth-service:8080
      MARKET_SERVICE_URL: http://market-service:8080
      DELIVERY_SERVICE_URL: http://delivery-service:8080
      NOTIFICATION_SERVICE_URL: http://notification-service:8080

  auth-service:
    build: ./auth-service/
    ports:
      - "8081:8080"
    depends_on:
      - postgres-db
    environment:
      SERVICE_PORT: 8080
      DATABASE_URL: jdbc:postgresql://postgres-db:5432/postgres?currentSchema=auth_service_schema
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      GITHUB_CLIENT_ID: 3be5dba121b074dcd72d
      GITHUB_CLIENT_SECRET: 411e16d70ebd97e2fe47553de7906a69a0cf8243
      GITHUB_REDIRECT_URL: http://localhost:8080/login/oauth2/code/github

  delivery-service:
    build: ./delivery-service/
    ports:
      - "8083:8080"
    depends_on:
      - postgres-db
      - broker
    environment:
      APPLICATION_PORT: 8080
      DATABASE_URL: jdbc:postgresql://postgres-db:5432/postgres?currentSchema=delivery_service_schema
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      AUTH_SERVICE_URL: http://auth-service:8080
      DELIVERY_STATUS_EVENT_TOPIC: delivery-status-event-container
      DELIVERY_STATUS_EVENT_BOOTSTRAP_SERVERS: localhost:9092

  market-service:
    build: ./market-service/
    ports:
      - "8082:8080"
    depends_on:
      - postgres-db
      - broker
    environment:
      APPLICATION_PORT: 8080
      DATABASE_URL: jdbc:postgresql://postgres-db:5432/postgres?currentSchema=market_service_schema
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      AUTH_SERVICE_URL: http://auth-service:8080
      DELIVERY_SERVICE_URL: http://delivery-service:8080
      DELIVERY_STATUS_EVENT_TOPIC: delivery-status-event-container
      DELIVERY_STATUS_EVENT_CONSUMER_GROUP: market-service-delivery-status-event-group-container
      DELIVERY_STATUS_EVENT_BOOTSTRAP_SERVERS: broker:29092

  notification-service:
    build: ./notification-service/
    ports:
      - "8084:8080"
    depends_on:
      - postgres-db
      - broker
    environment:
      APPLICATION_PORT: 8080
      DATABASE_URL: jdbc:postgresql://postgres-db:5432/postgres?currentSchema=notification_service_schema
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      DELIVERY_STATUS_EVENT_TOPIC: delivery-status-event-container
      DELIVERY_STATUS_EVENT_CONSUMER_GROUP: notification-service-delivery-status-event-group-container
      DELIVERY_STATUS_EVENT_BOOTSTRAP_SERVERS: broker:29092
      MARKET_SERVICE_URL: http://market-service:8082


  postgres-db:
    image: postgres:13-alpine
    ports:
      - "54326:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    restart: unless-stopped
    volumes:
      - ./volumes/db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    healthcheck:
      test: "[[ $$(echo srvr | nc localhost 2181 | grep -oG 'Mode: standalone') = \"Mode: standalone\" ]]"
      interval: 10s
      timeout: 1s
      retries: 30
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    deploy:
      resources:
        limits:
          memory: 200M

  broker:
    image: confluentinc/cp-server:7.4.0
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    deploy:
      resources:
        limits:
          memory: 800M